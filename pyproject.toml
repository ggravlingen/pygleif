[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pygleif"
description = "Query the GLEIF API using Python"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "ggravlingen", email = "no@email.com"},
]
dynamic = ['version']
dependencies    = [
    "pydantic>=2.0.3",
]
keywords = ["lei-code", "lei", "api", "gleif", "leicode"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Financial and Insurance Industry",
]

[project.urls]
"Source Code" = "https://github.com/ggravlingen/pygleif"

[project.optional-dependencies]
test = [
    "black==24.3.0",
    "coverage==7.4.4",
    "mypy==1.9.0",
    "pre-commit==3.7.0",
    "ruff==0.5.1",
    "pylint==3.1.0",
    "pytest==8.1.1",
    "pytest-cov==5.0.0",
    "pytest-timeout==2.3.1",
]

[tool.setuptools]
include-package-data = true
platforms = ["any"]
zip-safe = false

[tool.setuptools.dynamic]
version = {file = "pygleif/VERSION"}

[tool.setuptools.packages.find]
exclude = ["tests", "tests*"]

[tool.black]
target-version = ["py310"]

[tool.pylint.MASTER]
py-version = "3.10"

[tool.pylint.BASIC]
class-const-naming-style = "any"

[tool.pylint."MESSAGES CONTROL"]
extension-pkg-whitelist="pydantic"

[tool.pylint.REPORTS]
score = false

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"

[tool.pylint.EXCEPTIONS]
overgeneral-exceptions = [
    "builtins.BaseException",
    "builtins.Exception",
]

[tool.pylint.TYPING]
disable = [
    "too-few-public-methods"
]

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
norecursedirs = [
    ".git",
    "testing_config",
]

[tool.ruff]
exclude = [
    "tests",
]

target-version = "py311"

lint.select = [
    "C",  # complexity
    "D",  # docstrings
    "E",  # pycodestyle
    "F",  # pyflakes/autoflake
    "I",  # isort
    "T20", # flake8-print
    "UP",  # pyupgrade
    "W",  # pycodestyle
]

# Same as Black.
line-length = 88

lint.ignore = [# One of these is to be disabled..
          "D213", # See https://github.com/charliermarsh/ruff/issues/2281
          #"D212", # See https://github.com/charliermarsh/ruff/issues/2281

          "D203", # See https://github.com/charliermarsh/ruff/issues/2281
          #"D211", # See https://github.com/charliermarsh/ruff/issues/2281
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.pydocstyle]
convention = 'pep257'

[tool.ruff.lint.isort]
# will group `import x` and `from x import` of the same module.
combine-as-imports = true
force-sort-within-sections = true
forced-separate = [
  "tests",
]
known-first-party = [
  "pygleif",
  "tests",
]
